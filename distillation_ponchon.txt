% Program uses matlab to determine the number of stages required for a distillation column using Ponchon Savarit
% Created by Ethan Shipley
%% Clears all matlab data, closes windows, and sets the number format
clear all
format long
close all
%%
%% USER DEFINED FUNCTIONS AND X's
X=(1:-0.005:0)';
zf=0.37048; %chnge water is the light key
xb=0.054929797;%0.017955583;%0.007278626203; %change water is the light key
xd=0.544953761; %0.542623827; %change water is the light key
qb=3943.579384/1000;
qc=2256.276969/1000;
R=1.026469744;
Vbar=0.5; %change
F=3.32E-02;
D=F.*((zf-xb)./(xd-xb));
B=F-D;

P=88779.36513/100000; % bar
Tf=76; %Feed temperature
Tbub=84.887; %Bubble point of feed at xf
Tbwat=(-11.6834*227+3816.44+227*log(P))/(11.6834-log(P));% °C boiling point of water at P
Tbprop=(-10.9237*193+3166.38+193*log(P))/(10.9237-log(P));% °C boiling point of water at P


%Tba=96.341; 
%% Start creation finding value of q and creating q-line
%Cp(kJ/molK)
cppv=[143.71603 146.85048 153.46514 160.5401 168.07463 176.06806 184.51983 193.4294 202.79633 212.62018 222.9006 233.63725 244.82981 256.47803 268.58165  281.14045 294.15422 307.62276 321.54592 335.92352 350.75543 366.04151 381.78163 397.97569 414.62358]; %cppv is the specific heats for n-propanol
%tpv °C
tpv=[25 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260]; %tpv is the corresponding temps for the specific heats of
%n-propanol
tpv=tpv+273.15; % units kelvin
tb=[93.739 89.305 86.819 85.442 84.729 84.435 84.415 84.588 84.932 85.657 96.341];
xwattb=[0 .1 .2 .3 .4 .5 .6 .7 .8 .9 1];
[tbb, S]=polyfit(xwattb,tb,length(tb));
tbmix=@(x) polyval(tbb,x,S);

%http://booksite.elsevier.com/9780750683661/Appendix_C.pdf
cpropl=@(t) (88.080+.40224.*(t+273.15)-1.3032E-3.*(t+273.15).^2+1.9677E-6.*(t+273.15).^3)./1000;
%hpropvap=47.1;
hprop=@(t) 52.06.*exp(.8386.*((t+273.15)./536.7)).*(1-((t+273.15)./536.7)).^.6888;
cpropv=@(t) 8.314.*(2.65202+.0300904.*(t+273.15)-0.0000112759.*(t+273.15).^2+2026.72.*(t+273.15).^-2+1.45375e-9.*(t+273.15).^3); % specific heat capacity liquid nprop


cwatl=@(t) (-203.606+1523.29.*((t+273.15)./1000)-3196.413.*((t+273.15)./1000).^2+2474.455.*((t+273.15)./1000).^3+3.855326./((t+273.15)./1000).^2)./1000;

hwat=@(t) (2257.6.*((374.15-t)./374.15).^.375).*18.02./1000;
cwatv=@(t) 8.314.*(3.47+.00145.*(t+273.15)+0.*(t+273.15).^2+12100.*(t+273.15).^-2+0*(t+273.15).^3); % specific heat capacity liquid water

cpl=@(x,tf) (1-x)*cpropl(tf)+(x)*cwatl(tf);
hvap=@(x,tf) (1-x).*hprop(tf)+(x).*hwat(tf);

% Saturated liquid enthalpy

q=@(x,tf,tb) 1+((cpl(x,tf)*(tb-tf))/hvap(x,tf));
yq=@(x) (q(x,Tf,Tbub)/(q(x,Tf,Tbub)-1))*x-(zf/(q(x,Tf,Tbub)-1)); % q-line equation
yr=@(x) (R/(R+1))*x+(xd/(R+1)); % rectifying section

xinit=.55; %change, inititial x guess for intercept
funct=@(x) yr(x)-yq(x);
xm=fnew(funct,xinit); %x intercept
mmm=(yr(xm)-xb)/(xm-xb);
vb=1/(mmm-1);
ys=@(x) ((vb+1)/vb)*x-(xb/vb); % stripping section line

ym=yr(xm); %y intercept
xinit=.30; %change to initial guess for where rectifying line intercepts 45 degree line
funct=@(x) yr(x)-x;
xrm=fnew(funct,xinit);%
xinit=.1; % change to initial guess for where stripping line intercepts 45 degree line
funct=@(x) ys(x)-x;
xsm=fnew(funct,xinit);

yc=[xb ym xd];
xc=[xb xm xd];
%% End q-line
Aab=0.61233; % Wilson coefficient water to n-propanol
Aba=0.04793; % Wilson coefficient n-propanol to water
Ga=@(x) exp((1-x).*((Aab./(Aab+x-Aab.*x))-(Aba./(1+(Aba-1).*x))))./(x-x.*Aab+Aab);
Gb=@(x) exp(x.*((Aba./(Aba+(1-x)-Aba.*(1-x)))-(Aab./(1+(Aab-1).*(1-x)))))./((1-x)-(1-x).*Aba+Aba);
Pas=@(t) exp(11.6834-(3816.44./((t+273.15)-46.13)));% Vapour Pressure Water
Pbs=@(t) exp(10.9237-(3166.38./((t+273.15)-80.15)));% Vapour Pressure N-Propanol
i=1;
tFunct=@(t,x) (x.*Ga(x)./P).*Pas(t)+((1-x).*Gb(x)./P).*Pbs(t)-1;
initguess=84.549;
ya=@(x) x.*Ga(x).*Pas(fequil(tFunct,x,initguess))./P;
tde=[85.161 88.871 86.489 85.272 84.676 84.434 84.403 84.502 84.704 85.161 96.341];
yde=[0 0.25566172 0.381882142 0.456319139 0.505045316 0.539276312 0.564698145 0.584713444 0.602309598 0.62559017 1];
[tdd, S]=polyfit(yde,tde,length(tde));
tdmix=@(y) polyval(tdd,y,S);
h=@(x) x.*cwatl(fequil(tFunct,x,initguess)).*(fequil(tFunct,x,initguess)+273.15-(0+273.15))+(1-x).*cpropl(fequil(tFunct,x,initguess)).*(fequil(tFunct,x,initguess)+273.15-(0+273.15));
H=@(x) h(x)+hvap(x,fequil(tFunct,x,initguess));
hf=zf.*cwatl(Tf).*((Tf+273.15)-(0+273.15))+(1-zf).*cpropl(Tf).*((Tf+273.15)-(0+273.15));
Funct=@(t) (xb.*Ga(xb)./P).*Pas(t)+((1-xb).*Gb(xb)./P).*Pbs(t)-1;
initguess=84.549;
Tb= fnew(Funct,initguess);
hb=xb.*cwatl(Tb).*((Tb+273.15)-(0+273.15))+(1-xb).*cpropl(Tb).*((Tb+273.15)-(0+273.15));
Qpp=hb-qb/B;
yy=@(x) (hf-Qpp)./(zf-xb).*(x-zf)+hf;
fplot(ya,[0 1])
hold on
plot(xc,yc,'m',X,X)
hold on
%fmcsteps(xd,xb,ya,X,ys,yr,-1,'r')
figure()
fplot(h,[0 1]);
hold on
fplot(H,[0 1]);
hold on
plot([xd xd], [yy(xb) yy(xd)],'m')
hold on
plot([xb xb], [yy(xb) yy(xd)],'y')
hold on
plot([xb xd],[yy(xb) yy(xd)],'c')

fponchonv2(xd,xb,ya,X,ys,yr,h,H,yy,8,'s')
axis equal
%close all
%figure(1)
%fplot(@(x) -x, [0 1])